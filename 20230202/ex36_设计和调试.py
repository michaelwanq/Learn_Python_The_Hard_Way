# 1．每一条if语句必须包含一个else。
# 2．如果这个else永远都不应该被执行到，因为它本身没有任何意义，那你必须在else语句后面使用一个叫die的函数，
# 让它打印出出错消息并且“死”给你看，这和上一个习题类似，这样你可以找到很多的错误。
# 3．if语句的嵌套不要超过两层，最好尽量保持只有一层。
# 4．将if语句当作段落来对待，其中的每一个if、elif和else组合就跟一个段落的句子组合一样。在这种组合的最前面和最后面留一个空行以作区分。
# 5．你的布尔测试应该很简单，如果它们很复杂，你需要在函数里将它们的运算事先放到一个变量里，并且为变量取一个好名字。
# 遵循上面的简单规则，你就会写出比大部分程序员都好的代码来。回到上一个习题中，看看我有没有遵循这些规则，如果没有的话，就将其改正过来。
# 警告在日常编程中不要成为这些规则的奴隶。在训练中，你需要通过这些规则的应用来巩固学到的知识，而在实际编程中这些规则有时很蠢。
# 如果你觉得哪个规则很蠢，就别使用它。
# 循环的规则
# 1．只有在循环永不停止时使用“while循环”，这意味着你可能永远都用不到。这一条只在Python中成立，其他语言另当别论。
# 2．其他类型的循环都使用for循环，尤其是在循环的对象数量固定或者有限的情况下。
# 调试的小技巧
# 1．不要使用“调试器”（debugger）。调试器所做的相当于对病人进行全身扫描。
# 你并不会得到某方面的有用信息，而且你会发现它输出的信息太多，而且大部分没有用，或者只会让你更困惑。
# 2．调试程序的最好的方法是使用print在各个想要检查的关键点将变量打印出来，从而检查那里是否有错。
# 3．让程序一部分一部分地运行起来。不要等写了一大堆代码文件后才去运行它们，写一点儿，运行一点儿，再修改一点儿。
